declare namespace tea {
    class SubFcmSettingPage {
        _index: number;
        _page: cc.Node;
        doGetData(): void;
        setIndex(index: any): this;
        getIndex(): number;
        onSubpageChange(e: kaayou.Event): void;
        bAdminAdjust: boolean;
        bAdminVisible: boolean;
        bGive: boolean;
        bLowLevel: boolean;
        bPartner: boolean;
        brewardeq: boolean;
        bPartnerAdjust: boolean;
        bPause: boolean;
        bSwitch: boolean;
        btnHintDeduct: ccui.Button;
        btnHintMin: ccui.Button;
        btnMinSetting: ccui.Button;
        btnDeductSetting: ccui.Button;
        mskHintMin: ccui.Button;
        mskHintDeduct: ccui.Button;
        PersonRewardButton: ccui.Button;
        PersonRewardMsg: ccui.Text;
        TeamRewardButton: ccui.Button;
        TeamRewardMsg: ccui.Text;
        imgOff: string;
        imgOn: string;
        ivAdminAdjust: ccui.ImageView;
        ivAdminVisible: ccui.ImageView;
        ivGive: ccui.ImageView;
        ivLowLevel: ccui.ImageView;
        ivPartner: ccui.ImageView;
        ivRewardeq: ccui.ImageView;
        ivPartnerAdjust: ccui.ImageView;
        ivPause: ccui.ImageView;
        ivSwitch: ccui.ImageView;
        lbMin: ccui.Text;
        lbDeduct: ccui.Text;
        pnlHintMin: ccui.Layout;
        pnlHintDeduct: ccui.Layout;
        pnReward: ccui.Layout;
        HintReward: ccui.Button;
        RewardBubbleMask: ccui.Layout;
        searchMgr: FcmSearchWidget;
        reset(): void;
        doAdminAdjustChange(): void;
        doAdminVisiableChange(): void;
        doGiveChange(): void;
        doLowLevelChange(): void;
        doPartnerChange(): void;
        doRewardEqChange(): void;
        doPartnerAdjustChange(): void;
        doPauseChange(): void;
        doSwitchChange(): void;
        initWidthNode(pageMem: cc.Node, searchMgr: FcmSearchWidget): void;
        onAdminAdjustChange(e: kaayou.CheckEvent): void;
        onAdminVisiableChange(e: kaayou.CheckEvent): void;
        onGiveChange(e: kaayou.CheckEvent): void;
        onLowLevelChange(e: kaayou.CheckEvent): void;
        onPartnerChange(e: kaayou.CheckEvent): void;
        onRewardEqChange(e: kaayou.CheckEvent): void;
        onPartnerAdjustChange(e: kaayou.CheckEvent): void;
        onPauseChange(e: kaayou.CheckEvent): void;
        onSwitchChange(e: kaayou.CheckEvent): void;
        Save(): void;
        showData(): void;
    }
}
